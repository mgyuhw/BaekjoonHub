N, K = map(int, input().split())   # 가지고 있는 랜선의 개수(N)와 필요한 랜선의 개수(K)를 입력받습니다.
lis = []   # 가지고 있는 랜선의 길이를 저장할 리스트를 초기화합니다.
for _ in range(N):
    lis.append(int(input()))   # 가지고 있는 랜선의 길이를 입력받아 리스트에 추가합니다.

s = 1   # 최소 길이를 1로 설정합니다.
e = max(lis)   # 최대 길이를 가지고 있는 랜선 중 가장 긴 길이로 설정합니다.

while s <= e:   # 이분 탐색을 시작합니다. s > e가 될 때까지 반복합니다.
    mid = (s+e)//2   # 중간 값을 구합니다.
    LAN = 0   # 잘라진 랜선의 개수를 초기화합니다.
    for i in lis:
        LAN += i//mid   # 랜선을 mid 길이로 잘랐을 때, 잘라진 랜선의 개수를 구합니다.
    if LAN >= K:   # 필요한 랜선의 개수(K) 이상을 만들 수 있는 경우
        s = mid + 1   # mid+1부터 e까지 탐색합니다.
    else:   # 필요한 랜선의 개수(K)를 만들 수 없는 경우
        e = mid - 1   # s부터 mid-1까지 탐색합니다.

print(e)   # s > e가 될 때, e값이 가장 긴 랜선의 길이입니다.